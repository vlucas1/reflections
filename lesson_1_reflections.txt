How did viewing a diff between two versions of a file
help you see the bug that was introduced?

I was able to pin point the differences of
the two files exactly down to the lines
that have changed. This was very helpful.
Thank you diff!

But I also have to say that there are some
cryptical output elements, I can't decipher, yet!

***

How could having easy access to the entire history of a file 
make you a more efficient programmer in the long term?

It can help me go back in time and restore an old version, e.g.
if the actual code base changed in a way that turned out to be
not that good as thought in the beginning.

***

What do you think are the pros and cons of manually choosing 
when to create a commit, like you do in Git, vs having versions 
automatically saved, like Google Docs does?

Pro: you choose and so no random saving of files,
which often make no sense. Con: You have to remember and think
a little bit harder, if and when to commit a change.

***

Why do you think some version control systems, like Git, 
allow saving multiple files in one commit, while others, 
like Google Docs, treat each file separately?

Because while coding you often make changes in multiple files.

***

How can you use the commands git log and git diff
to view the history of files?

git log
git diff commit_n1_uuid commit_n2_uuid

***

How might using version control make you more
confident to make changes that could break something?

Because I can undo everything and track down changes
and bugs.

***

Now that you have your workspace set up,
what do you want to try using Git for?

Everything :)
